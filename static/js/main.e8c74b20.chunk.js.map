{"version":3,"sources":["mintbtn.js","coming.js","comingsoon.js","App.js","index.js"],"names":["require","config","Mintbtn","coming","class","href","ComingSoon","App","ReactDOM","render","document","getElementById"],"mappings":"sxSAIAA,EAAQ,KAAUC,S,OAgHHC,ICjGAC,EAhBA,WACb,OACE,mCAEE,qBAAKC,MAAM,2EAAX,SACE,mBAAGC,KAAK,mCAAR,SAA2C,wBAAQD,MAAM,gEAAd,gC,qBCqBpCE,IChBAC,EATL,WACR,OACE,mCAEA,cAAC,EAAD,O,gBCAJC,IAASC,OACP,cAAC,IAAD,UACD,cAAC,EAAD,MAECC,SAASC,eAAe,W","file":"static/js/main.e8c74b20.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport abi from \"./abi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nrequire(\"dotenv\").config();\r\n \r\nconst { REACT_APP_CONTRACT_ADDRESS } = process.env; \r\nconst SELECTEDNETWORK = \"4\";\r\nconst SELECTEDNETWORKNAME = \"Rinkeby TESTNET\";\r\nconst nftquantity = 10000;\r\n\r\nfunction Mintbtn() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [totalSupply, settotalSupply] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      const web3 = window.web3;\r\n      if(await web3.eth.net.getId() == SELECTEDNETWORK){\r\n      \r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n        settotalSupply(await ct.methods.totalSupply().call());\r\n\r\n        if (nftquantity-await ct.methods.totalSupply().call() == 0) {\r\n          setErrorMsg(\"All NFTs minted, Sale has ended\");\r\n        }\r\n      }\r\n      else {\r\n        // setProvider(false);\r\n        setErrorMsg(\"Select \\\"\" + SELECTEDNETWORKNAME + \"\\\" network in your wallet to buy the nft\");\r\n      }\r\n    }\r\n    else {\r\n      setErrorMsg(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } \r\n    else {\r\n      window.addEventListener('ethereum#initialized', handleEthereum, {once: true,});\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\nfunction handleEthereum() {\r\n  const { ethereum } = window;\r\n  if (ethereum && ethereum.isMetaMask) {\r\n    console.log('Ethereum successfully detected!');\r\n    // setProvider(true);\r\n  } else {\r\n    setErrorMsg('Please install MetaMask!');\r\n    // setProvider(false);\r\n  }\r\n}\r\n\r\n\r\n  }, []);\r\n\r\n  async function loadWeb3() {\r\n\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      const web3 = window.web3;\r\n      // Meta Mask Connected Account Address\r\n      let metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if(await web3.eth.net.getId() == SELECTEDNETWORK){\r\n        // // creating contract instance\r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n        let current = await ct.methods.totalSupply().call();\r\n        if (Number(current) === nftquantity) {\r\n          console.log(\"Sold out\");\r\n          return;\r\n        }\r\n        await ct.methods.mint(quantity).send({ from: metaMaskAccount });\r\n        settotalSupply(await ct.methods.totalSupply().call());\r\n        setQuantity(1);\r\n      }else { setErrorMsg(\"Select \\\"\" + SELECTEDNETWORKNAME + \"\\\" network in your wallet to buy the nft\") };\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      // window.alert(\r\n      //   \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      // );\r\n      { setErrorMsg(\"Non-Ethereum browser detected. You should consider trying MetaMask!\") }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !errormsg ? (\r\n        <div className=\"row mintingsection\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"yellow\">\r\n              <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", margin: \"auto\", width: \"320px\"}} className=\"mt-2\"> \r\n                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\" \"           \r\n            >Minting Soon!</button>\r\n            <br></br><br></br><br></br>\r\n          \r\n      </div> ) : <h5 className=\"mt-2 supplytext\"><b>{ errormsg }</b></h5> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mintbtn;","import React from \"react\";\r\nimport './coming.css';\r\n\r\nconst coming = () => {\r\n  return (\r\n    <>\r\n\r\n      <div class=\"buy-hover text-center mt-4 mt-lg-5  w-255 bg-white rounded-pill mx-auto \">\r\n        <a href=\"https://mint.thepokerfaces.club/\"><button class=\"btne  rounded-pill py-2 px-3 py-lg-3 px-lg-5 ff-momcake fs-xl\">PUBLIC MINT</button></a>\r\n\r\n      </div>\r\n      {/* <div>\r\n      <button\r\n              className=\"mt-3 mint-btn mx-auto d-block w-\"           \r\n            >MINT TBA</button></div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default coming;\r\n","import React from \"react\";\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport \"./comingsoon.css\"\r\n\r\n\r\nfunction ComingSoon() {\r\n    return (\r\n\r\n                    <div id=\"breeding\" class=\"container-fluid maindiv m-0 p-0\">\r\n                    \r\n                            <div class=\"row row1\">\r\n                               \r\n\r\n                                <div class=\"col-6 middlediv\">\r\n                                    <p className=\"fonts  websitename\">            Billionaire Sheep club\r\n</p>\r\n                                    <h1 className=\"fonts  comingsoontext\">Coming Soon! </h1>\r\n                                </div>\r\n\r\n                 \r\n                            </div>\r\n                    </div>\r\n\r\n\r\n    );\r\n\r\n    }\r\nexport default ComingSoon;","// import Home from \"./Home\"\r\nimport Mintbtn from \"./mintbtn\";\r\nimport Coming from \"./coming\";\r\nimport Comingsoon from \"./comingsoon\"\r\nconst App=()=> {\r\n  return (\r\n    <>\r\n    {/* <Home /> */}\r\n    <Coming />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// <Routes>\r\n//        <Route path=\"/\" element={<Coming />} />\r\n//       <Route path=\"/breeding\" element={<ComingSoon />} />\r\n \r\n//     {/* <Coming /> */}\r\n//     </Routes>\r\n","import ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from \"./App\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n <App /> \r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}